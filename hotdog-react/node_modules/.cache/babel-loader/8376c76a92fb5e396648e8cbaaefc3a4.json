{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/hotdog-app/hotdog-react/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  } //    state = {\n  //\thotdogs: []\n  //    }\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/hotdog\").then(response => response.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } //    renderHotdog = ({ id, name}) => <div key={id}>{name}</div>\n\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, item.name, \" \", item.price)));\n    }\n  } //    renderHotdog = ({ id, name }) => \n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/hotdog-app/hotdog-react/src/App.js"],"names":["React","Component","App","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","response","json","result","setState","data","render","message","map","item","id","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAExBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKI,GATuB,CAW5B;AACA;AACA;;;AAEIC,EAAAA,iBAAiB,GAAG;AACvBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAGEG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACjBR,QAAAA,QAAQ,EAAE,IADO;AAEjBC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFG,OAAd;AAIH,KARF,EASEV,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACjBR,QAAAA,QAAQ,EAAE,IADO;AAEjBD,QAAAA;AAFiB,OAAd;AAIH,KAdF;AAgBI,GAhCuB,CAkC5B;;;AAEIW,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKZ,KAD5B;AAAA,UACJC,KADI,eACJA,KADI;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,KADb,eACaA,KADb;;AAEZ,QAAIF,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAcA,KAAK,CAACY,OAApB,CAAP;AACH,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAP;AACH,KAFM,MAEA;AACH,aACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KAAK,CAACW,GAAN,CAAUC,IAAI,IAClB;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,IADV,OACiBF,IAAI,CAACG,KADtB,CADI,CADL,CADG;AASH;AACG,GArDuB,CAuD5B;;;AAvD4B;;AA2D5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    error: null,\n\t    isLoaded: false,\n\t    items: []\n\t};\n    }\n\n//    state = {\n//\thotdogs: []\n//    }\n\n    componentDidMount() {\n\tfetch(\"http://localhost:4000/hotdog\")\n\t    .then(response => response.json())\n\t    .then(\n\t\t(result) => {\n\t\t    this.setState({ \n\t\t\tisLoaded: true,\n\t\t\titems: result.data\n\t\t    });\n\t\t},\n\t\t(error) => {\n\t\t    this.setState({ \n\t\t\tisLoaded: true,\n\t\t\terror\n\t\t    });\n\t\t}\n\t    )\n    }\n\n//    renderHotdog = ({ id, name}) => <div key={id}>{name}</div>\n\n    render() {\n\tconst { error, isLoaded, items } = this.state;\n\tif (error) {\n\t    return <div>Ошибка: {error.message}</div>;\n\t} else if (!isLoaded) {\n\t    return <div>Загрузка...</div>;\n\t} else {\n\t    return (\n\t\t<ul>\n\t\t    {items.map(item => (\n\t\t\t<li key={item.id}>\n\t\t\t    {item.name} {item.price}\n\t\t\t</li>\n\t\t    ))}\n\t\t</ul>\n\t    );\n\t}\n    }\n\n//    renderHotdog = ({ id, name }) => \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}